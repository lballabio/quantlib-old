<root>

  <enumeratedTypeCopyright>
    Copyright (C) 2006, 2007, 2008, 2014, 2015 Ferdinando Ametrano
    Copyright (C) 2007 Marco Bianchetti
    Copyright (C) 2005, 2006, 2007 Eric Ehlers
    Copyright (C) 2006 Giorgio Facchinetti
    Copyright (C) 2006 Chiara Fornarola
    Copyright (C) 2006 Katiuscia Manzoni
    Copyright (C) 2005 Plamen Neykov
    Copyright (C) 2015 Maddalena Zanzi
    Copyright (C) 2015 Riccardo Barone
    Copyright (C) 2015 Paolo Mazzocchi
  </enumeratedTypeCopyright>

  <EnumeratedTypeGroups>

    <EnumeratedTypeGroup type='QuantLib::SensitivityAnalysis'>
      <includeFile>oh/enumerations/typefactory.hpp</includeFile>
      <constructor>true</constructor>
      <EnumeratedTypes>
        <EnumeratedType>
          <string>OneSide</string>
          <value>QuantLib::OneSide</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Centered</string>
          <value>QuantLib::Centered</value>
        </EnumeratedType>
      </EnumeratedTypes>
    </EnumeratedTypeGroup>

    <EnumeratedTypeGroup type='QuantLib::DateGeneration::Rule'>
      <includeFile>oh/enumerations/typefactory.hpp</includeFile>
      <constructor>true</constructor>
      <EnumeratedTypes>
        <EnumeratedType>
          <string>Backward</string>
          <value>QuantLib::DateGeneration::Backward</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Forward</string>
          <value>QuantLib::DateGeneration::Forward</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Zero</string>
          <value>QuantLib::DateGeneration::Zero</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>ThirdWednesday</string>
          <value>QuantLib::DateGeneration::ThirdWednesday</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Twentieth</string>
          <value>QuantLib::DateGeneration::Twentieth</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>TwentiethIMM</string>
          <value>QuantLib::DateGeneration::TwentiethIMM</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>OldCDS</string>
          <value>QuantLib::DateGeneration::OldCDS</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>CDS</string>
          <value>QuantLib::DateGeneration::CDS</value>
        </EnumeratedType>
      </EnumeratedTypes>
    </EnumeratedTypeGroup>

    <EnumeratedTypeGroup type='QuantLib::TimeUnit'>
      <includeFile>oh/enumerations/typefactory.hpp</includeFile>
      <constructor>true</constructor>
      <EnumeratedTypes>
        <EnumeratedType>
          <string>Months</string>
          <value>QuantLib::Months</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Days</string>
          <value>QuantLib::Days</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Weeks</string>
          <value>QuantLib::Weeks</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Years</string>
          <value>QuantLib::Years</value>
        </EnumeratedType>
      </EnumeratedTypes>
    </EnumeratedTypeGroup>

    <EnumeratedTypeGroup type='QuantLib::Frequency'>
      <includeFile>oh/enumerations/typefactory.hpp</includeFile>
      <constructor>true</constructor>
      <EnumeratedTypes>

        <EnumeratedType>
          <string>Frequency</string>
          <value>QuantLib::NoFrequency</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>NoFrequency</string>
          <value>QuantLib::NoFrequency</value>
        </EnumeratedType>

        <EnumeratedType>
          <string>Annual</string>
          <value>QuantLib::Annual</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Semiannual</string>
          <value>QuantLib::Semiannual</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>EveryFourthMonth</string>
          <value>QuantLib::EveryFourthMonth</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Quarterly</string>
          <value>QuantLib::Quarterly</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Bimonthly</string>
          <value>QuantLib::Bimonthly</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Monthly</string>
          <value>QuantLib::Monthly</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Biweekly</string>
          <value>QuantLib::Biweekly</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>EveryFourthWeek</string>
          <value>QuantLib::EveryFourthWeek</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Weekly</string>
          <value>QuantLib::Weekly</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Daily</string>
          <value>QuantLib::Daily</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Once</string>
          <value>QuantLib::Once</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>OtherFrequency</string>
          <value>QuantLib::OtherFrequency</value>
        </EnumeratedType>
      </EnumeratedTypes>
    </EnumeratedTypeGroup>

    <EnumeratedTypeGroup type='QuantLib::Calendar'>
      <includeFile>qlo/enumerations/factories/calendarfactory.hpp</includeFile>
      <constructor>false</constructor>
      <EnumeratedTypes>

        <EnumeratedType>
          <string>Calendar</string>
          <value>QuantLib::Calendar()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>NoCalendar</string>
          <value>QuantLib::Calendar()</value>
        </EnumeratedType>

        <!--too bad NullCalendar is actually a calendar-->
        <EnumeratedType>
          <string>Null</string>
          <value>QuantLib::NullCalendar()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>NullCalendar</string>
          <value>QuantLib::NullCalendar()</value>
        </EnumeratedType>

        <EnumeratedType>
          <string>TARGET</string>
          <value>QuantLib::TARGET()</value>
        </EnumeratedType>
        <EnumeratedType>
          <!-- Clone of TARGET -->
          <string>EUR</string>
          <value>QuantLib::TARGET()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Argentina::Merval</string>
          <value>QuantLib::Argentina(QuantLib::Argentina::Merval)</value>
        </EnumeratedType>
        <EnumeratedType>
          <!-- Clone for Argentina::Merval -->
          <string>Buenos Aires stock exchange</string>
          <value>QuantLib::Argentina(QuantLib::Argentina::Merval)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Australia</string>
          <value>QuantLib::Australia()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Brazil::Settlement</string>
          <value>QuantLib::Brazil(QuantLib::Brazil::Settlement)</value>
        </EnumeratedType>
        <EnumeratedType>
          <!-- Clone for Brazil::Settlement -->
          <string>Brazil</string>
          <value>QuantLib::Brazil(QuantLib::Brazil::Settlement)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Brazil::Exchange</string>
          <value>QuantLib::Brazil(QuantLib::Brazil::Exchange)</value>
        </EnumeratedType>
        <EnumeratedType>
          <!-- Clone for Brazil::Exchange -->
          <string>BOVESPA</string>
          <value>QuantLib::Brazil(QuantLib::Brazil::Exchange)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Canada::Settlement</string>
          <value>QuantLib::Canada(QuantLib::Canada::Settlement)</value>
        </EnumeratedType>
        <EnumeratedType>
          <!-- Clone for Canada::Settlement -->
          <string>Canada</string>
          <value>QuantLib::Canada(QuantLib::Canada::Settlement)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Canada::TSX</string>
          <value>QuantLib::Canada(QuantLib::Canada::TSX)</value>
        </EnumeratedType>
        <EnumeratedType>
          <!-- Clone for Canada::TSX -->
          <string>TSX</string>
          <value>QuantLib::Canada(QuantLib::Canada::TSX)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>China</string>
          <value>QuantLib::China()</value>
        </EnumeratedType>
        <EnumeratedType>
          <!-- Clone for China -->
          <string>Shanghai stock exchange</string>
          <value>QuantLib::China()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>CzechRepublic::PSE</string>
          <value>QuantLib::CzechRepublic(QuantLib::CzechRepublic::PSE)</value>
        </EnumeratedType>
        <EnumeratedType>
          <!-- Clone for CzechRepublic::PSE -->
          <string>Prague stock exchange</string>
          <value>QuantLib::CzechRepublic(QuantLib::CzechRepublic::PSE)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Denmark</string>
          <value>QuantLib::Denmark()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Finland</string>
          <value>QuantLib::Finland()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Germany::Eurex</string>
          <value>QuantLib::Germany(QuantLib::Germany::Eurex)</value>
        </EnumeratedType>
        <EnumeratedType>
          <!-- Clone for Germany::Eurex -->
          <string>Eurex</string>
          <value>QuantLib::Germany(QuantLib::Germany::Eurex)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Germany::FrankfurtStockExchange</string>
          <value>QuantLib::Germany(QuantLib::Germany::FrankfurtStockExchange)</value>
        </EnumeratedType>
        <EnumeratedType>
          <!-- Clone for Germany::FrankfurtStockExchange -->
          <string>Frankfurt stock exchange</string>
          <value>QuantLib::Germany(QuantLib::Germany::FrankfurtStockExchange)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Germany::Settlement</string>
          <value>QuantLib::Germany(QuantLib::Germany::Settlement)</value>
        </EnumeratedType>
        <EnumeratedType>
          <!-- Clone for Germany::Settlement -->
          <string>German settlement</string>
          <value>QuantLib::Germany(QuantLib::Germany::Settlement)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Germany::Xetra</string>
          <value>QuantLib::Germany(QuantLib::Germany::Xetra)</value>
        </EnumeratedType>
        <EnumeratedType>
          <!-- Clone for Germany::Xetra -->
          <string>Xetra</string>
          <value>QuantLib::Germany(QuantLib::Germany::Xetra)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>HongKong::HKEx</string>
          <value>QuantLib::HongKong(QuantLib::HongKong::HKEx)</value>
        </EnumeratedType>
        <EnumeratedType>
          <!-- Clone for HongKong::HKEx -->
          <string>Hong Kong stock exchange</string>
          <value>QuantLib::HongKong(QuantLib::HongKong::HKEx)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Hungary</string>
          <value>QuantLib::Hungary()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Iceland::ICEX</string>
          <value>QuantLib::Iceland(QuantLib::Iceland::ICEX)</value>
        </EnumeratedType>
        <EnumeratedType>
          <!-- Clone for Iceland::ICEX -->
          <string>Iceland stock exchange</string>
          <value>QuantLib::Iceland(QuantLib::Iceland::ICEX)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>India::NSE</string>
          <value>QuantLib::India(QuantLib::India::NSE)</value>
        </EnumeratedType>
        <EnumeratedType>
          <!-- Clone for India::NSE -->
          <string>National Stock Exchange of India</string>
          <value>QuantLib::India(QuantLib::India::NSE)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Indonesia::BEJ</string>
          <value>QuantLib::Indonesia(QuantLib::Indonesia::BEJ)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Indonesia::JSX</string>
          <value>QuantLib::Indonesia(QuantLib::Indonesia::JSX)</value>
        </EnumeratedType>
        <EnumeratedType>
          <!-- Clone for Indonesia::JSX -->
          <string>Jakarta stock exchange</string>
          <value>QuantLib::Indonesia(QuantLib::Indonesia::JSX)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Israel::Settlement</string>
          <value>QuantLib::Israel(QuantLib::Israel::Settlement)</value>
        </EnumeratedType>
        <EnumeratedType>
          <!-- Clone for Israel::Settlement -->
          <string>Israel settlement</string>
          <value>QuantLib::Israel(QuantLib::Israel::Settlement)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Israel::TASE</string>
          <value>QuantLib::Israel(QuantLib::Israel::TASE)</value>
        </EnumeratedType>
        <EnumeratedType>
          <!-- Clone for Israel::TASE -->
          <string>Tel-Aviv stock exchange</string>
          <value>QuantLib::Israel(QuantLib::Israel::TASE)</value>
        </EnumeratedType>
        <EnumeratedType>
          <!-- Clone for Israel::TASE -->
          <string>Tel Aviv stock exchange</string>
          <value>QuantLib::Israel(QuantLib::Israel::TASE)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Italy::Exchange</string>
          <value>QuantLib::Italy(QuantLib::Italy::Exchange)</value>
        </EnumeratedType>
        <EnumeratedType>
          <!-- Clone for Italy::Exchange -->
          <string>Milan stock exchange</string>
          <value>QuantLib::Italy(QuantLib::Italy::Exchange)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Italy::Settlement</string>
          <value>QuantLib::Italy(QuantLib::Italy::Settlement)</value>
        </EnumeratedType>
        <EnumeratedType>
          <!-- Clone for Italy::Settlement -->
          <string>Italian settlement</string>
          <value>QuantLib::Italy(QuantLib::Italy::Settlement)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Japan</string>
          <value>QuantLib::Japan()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Mexico::BMV</string>
          <value>QuantLib::Mexico(QuantLib::Mexico::BMV)</value>
        </EnumeratedType>
        <EnumeratedType>
          <!-- Clone for Mexico::BMV -->
          <string>Mexican stock exchange</string>
          <value>QuantLib::Mexico(QuantLib::Mexico::BMV)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>NewZealand</string>
          <value>QuantLib::NewZealand()</value>
        </EnumeratedType>
        <EnumeratedType>
          <!-- Clone for NewZealand -->
          <string>New Zealand</string>
          <value>QuantLib::NewZealand()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Norway</string>
          <value>QuantLib::Norway()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Poland</string>
          <value>QuantLib::Poland()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Romania</string>
          <value>QuantLib::Romania()</value>
        </EnumeratedType>
        <EnumeratedType>
          <!-- Clone for Romania -->
          <string>BVB</string>
          <value>QuantLib::Romania()</value>
        </EnumeratedType>
        <EnumeratedType>
          <!-- Clone for Romania -->
          <string>Bucharest stock exchange</string>
          <value>QuantLib::Romania()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Russia</string>
          <value>QuantLib::Russia()</value>
        </EnumeratedType>
        <EnumeratedType>
          <!-- Clone for Russia -->
          <string>Russian settlement</string>
          <value>QuantLib::Russia()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>SaudiArabia::Tadawul</string>
          <value>QuantLib::SaudiArabia(QuantLib::SaudiArabia::Tadawul)</value>
        </EnumeratedType>
        <EnumeratedType>
          <!-- Clone for SaudiArabia::Tadawul -->
          <string>Tadawul</string>
          <value>QuantLib::SaudiArabia(QuantLib::SaudiArabia::Tadawul)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Singapore::SGX</string>
          <value>QuantLib::Singapore(QuantLib::Singapore::SGX)</value>
        </EnumeratedType>
        <EnumeratedType>
          <!-- Clone for Singapore::SGX -->
          <string>Singapore exchange</string>
          <value>QuantLib::Singapore(QuantLib::Singapore::SGX)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Slovakia::BSSE</string>
          <value>QuantLib::Slovakia(QuantLib::Slovakia::BSSE)</value>
        </EnumeratedType>
        <EnumeratedType>
          <!-- Clone for Slovakia::BSSE -->
          <string>Bratislava stock exchange</string>
          <value>QuantLib::Slovakia(QuantLib::Slovakia::BSSE)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>SouthAfrica</string>
          <value>QuantLib::SouthAfrica()</value>
        </EnumeratedType>
        <EnumeratedType>
          <!-- Clone for SouthAfrica -->
          <string>South Africa</string>
          <value>QuantLib::SouthAfrica()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>SouthKorea::KRX</string>
          <value>QuantLib::SouthKorea(QuantLib::SouthKorea::KRX)</value>
        </EnumeratedType>
        <EnumeratedType>
          <!-- Clone for SouthKorea::KRX -->
          <string>South-Korea exchange</string>
          <value>QuantLib::SouthKorea(QuantLib::SouthKorea::KRX)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Sweden</string>
          <value>QuantLib::Sweden()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Switzerland</string>
          <value>QuantLib::Switzerland()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Taiwan::TSEC</string>
          <value>QuantLib::Taiwan(QuantLib::Taiwan::TSEC)</value>
        </EnumeratedType>
        <EnumeratedType>
          <!-- Clone for Taiwan::TSEC -->
          <string>Taiwan stock exchange</string>
          <value>QuantLib::Taiwan(QuantLib::Taiwan::TSEC)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Turkey</string>
          <value>QuantLib::Turkey()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Ukraine::USE</string>
          <value>QuantLib::Ukraine(QuantLib::Ukraine::USE)</value>
        </EnumeratedType>
        <EnumeratedType>
          <!-- Clone for Ukraine::USE -->
          <string>Ukrainian stock exchange</string>
          <value>QuantLib::Ukraine(QuantLib::Ukraine::USE)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>UnitedKingdom::Exchange</string>
          <value>QuantLib::UnitedKingdom(QuantLib::UnitedKingdom::Exchange)</value>
        </EnumeratedType>
        <EnumeratedType>
          <!-- Clone for UnitedKingdom::Exchange -->
          <string>London stock exchange</string>
          <value>QuantLib::UnitedKingdom(QuantLib::UnitedKingdom::Exchange)</value>
        </EnumeratedType>
        <EnumeratedType>
          <!-- Clone for UnitedKingdom::Exchange -->
          <string>LONDON</string>
          <value>QuantLib::UnitedKingdom(QuantLib::UnitedKingdom::Exchange)</value>
        </EnumeratedType>
        <EnumeratedType>
          <!-- Clone for UnitedKingdom::Exchange -->
          <string>GBP</string>
          <value>QuantLib::UnitedKingdom(QuantLib::UnitedKingdom::Exchange)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>UnitedKingdom::Metals</string>
          <value>QuantLib::UnitedKingdom(QuantLib::UnitedKingdom::Metals)</value>
        </EnumeratedType>
        <EnumeratedType>
          <!-- Clone for UnitedKingdom::Metals -->
          <string>London metals exchange</string>
          <value>QuantLib::UnitedKingdom(QuantLib::UnitedKingdom::Metals)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>UnitedKingdom::Settlement</string>
          <value>QuantLib::UnitedKingdom(QuantLib::UnitedKingdom::Settlement)</value>
        </EnumeratedType>
        <EnumeratedType>
          <!-- Clone for UnitedKingdom::Settlement -->
          <string>UK settlement</string>
          <value>QuantLib::UnitedKingdom(QuantLib::UnitedKingdom::Settlement)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>UnitedStates::GovernmentBond</string>
          <value>QuantLib::UnitedStates(QuantLib::UnitedStates::GovernmentBond)</value>
        </EnumeratedType>
        <EnumeratedType>
          <!-- Clone for UnitedStates::GovernmentBond -->
          <string>US government bond market</string>
          <value>QuantLib::UnitedStates(QuantLib::UnitedStates::GovernmentBond)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>UnitedStates::NERC</string>
          <value>QuantLib::UnitedStates(QuantLib::UnitedStates::NERC)</value>
        </EnumeratedType>
        <EnumeratedType>
          <!-- Clone for UnitedStates::NERC -->
          <string>North American Energy Reliability Council</string>
          <value>QuantLib::UnitedStates(QuantLib::UnitedStates::NERC)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>UnitedStates::NYSE</string>
          <value>QuantLib::UnitedStates(QuantLib::UnitedStates::NYSE)</value>
        </EnumeratedType>
        <EnumeratedType>
          <!-- Clone for UnitedStates::NYSE -->
          <string>New York stock exchange</string>
          <value>QuantLib::UnitedStates(QuantLib::UnitedStates::NYSE)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>UnitedStates::Settlement</string>
          <value>QuantLib::UnitedStates(QuantLib::UnitedStates::Settlement)</value>
        </EnumeratedType>
        <EnumeratedType>
          <!-- Clone for UnitedStates::Settlement -->
          <string>US settlement</string>
          <value>QuantLib::UnitedStates(QuantLib::UnitedStates::Settlement)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>WeekendsOnly</string>
          <value>QuantLib::WeekendsOnly()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>weekends only</string>
          <value>QuantLib::WeekendsOnly()</value>
        </EnumeratedType>
      </EnumeratedTypes>
    </EnumeratedTypeGroup>

    <EnumeratedTypeGroup type='QuantLib::DayCounter'>
      <includeFile>oh/enumerations/typefactory.hpp</includeFile>
      <constructor>false</constructor>
      <EnumeratedTypes>

        <EnumeratedType>
          <string>DayCounter</string>
          <value>QuantLib::DayCounter()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>NoDayCounter</string>
          <value>QuantLib::DayCounter()</value>
        </EnumeratedType>

        <!-- ISDA 2000 Definition Annex Article 4 Section 4.16 (b) -->
        <EnumeratedType>
          <string>Actual/365 (Fixed)</string>
          <value>QuantLib::Actual365Fixed()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Act/365 (Fixed)</string>
          <value>QuantLib::Actual365Fixed()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>A/365 (Fixed)</string>
          <value>QuantLib::Actual365Fixed()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>A/365F</string>
          <value>QuantLib::Actual365Fixed()</value>
        </EnumeratedType>

        <!-- ISDA 2000 Definition Annex Article 4 Section 4.16 (a) -->
        <EnumeratedType>
          <string>1/1</string>
          <value>QuantLib::OneDayCounter()</value>
        </EnumeratedType>

        <!-- ISDA 2000 Definition Annex Article 4 Section 4.16 (c) -->
        <EnumeratedType>
          <string>Actual/Actual (ISDA)</string>
          <value>QuantLib::ActualActual(QuantLib::ActualActual::ISDA)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Actual/Actual</string>
          <value>QuantLib::ActualActual(QuantLib::ActualActual::ISDA)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Actual/365</string>
          <value>QuantLib::ActualActual(QuantLib::ActualActual::ISDA)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Act/365</string>
          <value>QuantLib::ActualActual(QuantLib::ActualActual::ISDA)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>A/365</string>
          <value>QuantLib::ActualActual(QuantLib::ActualActual::ISDA)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Act/Act</string>
          <value>QuantLib::ActualActual(QuantLib::ActualActual::ISDA)</value>
        </EnumeratedType>

        <!-- ISDA 2000 Definition Annex Article 4 Section 4.16 (d) -->
        <EnumeratedType>
          <string>Actual/360</string>
          <value>QuantLib::Actual360()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Act/360</string>
          <value>QuantLib::Actual360()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>A/360</string>
          <value>QuantLib::Actual360()</value>
        </EnumeratedType>

        <!-- ISDA 2000 Definition Annex Article 4 Section 4.16 (e) -->
        <EnumeratedType>
          <string>30/360 (Bond Basis)</string>
          <value>QuantLib::Thirty360(QuantLib::Thirty360::BondBasis)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Bond Basis</string>
          <value>QuantLib::Thirty360(QuantLib::Thirty360::BondBasis)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>30/360</string>
          <value>QuantLib::Thirty360(QuantLib::Thirty360::BondBasis)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>360/360</string>
          <value>QuantLib::Thirty360(QuantLib::Thirty360::BondBasis)</value>
        </EnumeratedType>

        <!-- ISDA 2000 Definition Annex Article 4 Section 4.16 (f) -->
        <EnumeratedType>
          <string>30/360 (Eurobond Basis)</string>
          <value>QuantLib::Thirty360(QuantLib::Thirty360::EurobondBasis)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Eurobond Basis</string>
          <value>QuantLib::Thirty360(QuantLib::Thirty360::EurobondBasis)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>30E/360</string>
          <value>QuantLib::Thirty360(QuantLib::Thirty360::EurobondBasis)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>30E/360 (Eurobond Basis)</string>
          <value>QuantLib::Thirty360(QuantLib::Thirty360::EurobondBasis)</value>
        </EnumeratedType>

        <!-- NON-ISDA  -->
        <EnumeratedType>
          <string>Actual/Actual (ISMA)</string>
          <value>QuantLib::ActualActual(QuantLib::ActualActual::ISMA)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Actual/Actual (Bond)</string>
          <value>QuantLib::ActualActual(QuantLib::ActualActual::ISMA)</value>
        </EnumeratedType>

        <!-- NON-ISDA -->
        <EnumeratedType>
          <string>Actual/Actual (AFB)</string>
          <value>QuantLib::ActualActual(QuantLib::ActualActual::AFB)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Actual/Actual (Euro)</string>
          <value>QuantLib::ActualActual(QuantLib::ActualActual::AFB)</value>
        </EnumeratedType>

        <!-- NON-ISDA -->
        <EnumeratedType>
          <string>30/360 (Italian)</string>
          <value>QuantLib::Thirty360(QuantLib::Thirty360::Italian)</value>
        </EnumeratedType>

        <!-- NON-ISDA -->
        <EnumeratedType>
          <string>Actual/365 (No Leap)</string>
          <value>QuantLib::Actual365NoLeap()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Actual/365 (JGB)</string>
          <value>QuantLib::Actual365NoLeap()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Act/365 (NL)</string>
          <value>QuantLib::Actual365NoLeap()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>NL/365</string>
          <value>QuantLib::Actual365NoLeap()</value>
        </EnumeratedType>

        <!-- NON-ISDA QuantLib specific -->
        <EnumeratedType>
          <string>Simple</string>
          <value>QuantLib::SimpleDayCounter()</value>
        </EnumeratedType>

        <!-- Strings specific for receiving Murex exports-->
        <EnumeratedType>
          <string>LIN 30/360</string>
          <value>QuantLib::Thirty360(QuantLib::Thirty360::EurobondBasis)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>LIN ACT/360</string>
          <value>QuantLib::Actual360()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>LIN ACT/365</string>
          <value>QuantLib::Actual365Fixed()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>LIN ACT/ACT</string>
          <value>QuantLib::ActualActual(QuantLib::ActualActual::AFB)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>LIN ACTACT ISDA</string>
          <value>QuantLib::ActualActual(QuantLib::ActualActual::ISDA)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>LIN ACTACT ISMA</string>
          <value>QuantLib::ActualActual(QuantLib::ActualActual::ISMA)</value>
        </EnumeratedType>


        <!-- Other? -->
        <EnumeratedType>
          <string>Business252</string>
          <value>QuantLib::Business252()</value>
        </EnumeratedType>

      </EnumeratedTypes>
    </EnumeratedTypeGroup>

    <EnumeratedTypeGroup type='QuantLib::BusinessDayConvention'>
      <includeFile>oh/enumerations/typefactory.hpp</includeFile>
      <constructor>true</constructor>
      <EnumeratedTypes>
        <EnumeratedType>
          <string>Following</string>
          <value>QuantLib::Following</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>F</string>
          <value>QuantLib::Following</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Modified Following</string>
          <value>QuantLib::ModifiedFollowing</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>MF</string>
          <value>QuantLib::ModifiedFollowing</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Half-Month Modified Following</string>
          <value>QuantLib::HalfMonthModifiedFollowing</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>HMMF</string>
          <value>QuantLib::HalfMonthModifiedFollowing</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Preceding</string>
          <value>QuantLib::Preceding</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>P</string>
          <value>QuantLib::Preceding</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Modified Preceding</string>
          <value>QuantLib::ModifiedPreceding</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>MP</string>
          <value>QuantLib::ModifiedPreceding</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Unadjusted</string>
          <value>QuantLib::Unadjusted</value>
        </EnumeratedType>
        <!-- For Mgx export only -->
        <EnumeratedType>
          <string>Indifferent</string>
          <value>QuantLib::Unadjusted</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Nearest</string>
          <value>QuantLib::Nearest</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>N</string>
          <value>QuantLib::Nearest</value>
        </EnumeratedType>
      </EnumeratedTypes>
    </EnumeratedTypeGroup>

    <EnumeratedTypeGroup type='QuantLib::Month'>
      <includeFile>oh/enumerations/typefactory.hpp</includeFile>
      <constructor>true</constructor>
      <EnumeratedTypes>
        <EnumeratedType>
          <string>January</string>
          <value>QuantLib::January</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>February</string>
          <value>QuantLib::February</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>March</string>
          <value>QuantLib::March</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>April</string>
          <value>QuantLib::April</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>May</string>
          <value>QuantLib::May</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>June</string>
          <value>QuantLib::June</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>July</string>
          <value>QuantLib::July</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>August</string>
          <value>QuantLib::August</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>September</string>
          <value>QuantLib::September</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>October</string>
          <value>QuantLib::October</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>November</string>
          <value>QuantLib::November</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>December</string>
          <value>QuantLib::December</value>
        </EnumeratedType>

        <EnumeratedType>
          <string>Jan</string>
          <value>QuantLib::Jan</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Feb</string>
          <value>QuantLib::Feb</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Mar</string>
          <value>QuantLib::Mar</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Apr</string>
          <value>QuantLib::Apr</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Jun</string>
          <value>QuantLib::Jun</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Jul</string>
          <value>QuantLib::Jul</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Aug</string>
          <value>QuantLib::Aug</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Sep</string>
          <value>QuantLib::Sep</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Oct</string>
          <value>QuantLib::Oct</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Nov</string>
          <value>QuantLib::Nov</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Dec</string>
          <value>QuantLib::Dec</value>
        </EnumeratedType>

        <EnumeratedType>
          <string>1</string>
          <value>QuantLib::January</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>2</string>
          <value>QuantLib::February</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>3</string>
          <value>QuantLib::March</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>4</string>
          <value>QuantLib::April</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>5</string>
          <value>QuantLib::May</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>6</string>
          <value>QuantLib::June</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>7</string>
          <value>QuantLib::July</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>8</string>
          <value>QuantLib::August</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>9</string>
          <value>QuantLib::September</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>10</string>
          <value>QuantLib::October</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>11</string>
          <value>QuantLib::November</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>12</string>
          <value>QuantLib::December</value>
        </EnumeratedType>

      </EnumeratedTypes>
    </EnumeratedTypeGroup>

    <EnumeratedTypeGroup type='QuantLib::Weekday'>
      <includeFile>oh/enumerations/typefactory.hpp</includeFile>
      <constructor>true</constructor>
      <EnumeratedTypes>
        <EnumeratedType>
          <string>Monday</string>
          <value>QuantLib::Monday</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Tuesday</string>
          <value>QuantLib::Tuesday</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Wednesday</string>
          <value>QuantLib::Wednesday</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Thursday</string>
          <value>QuantLib::Thursday</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Friday</string>
          <value>QuantLib::Friday</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Saturday</string>
          <value>QuantLib::Saturday</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Sunday</string>
          <value>QuantLib::Sunday</value>
        </EnumeratedType>

        <EnumeratedType>
          <string>Mon</string>
          <value>QuantLib::Mon</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Tue</string>
          <value>QuantLib::Tue</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Wed</string>
          <value>QuantLib::Wed</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Thu</string>
          <value>QuantLib::Thu</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Fri</string>
          <value>QuantLib::Fri</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Sat</string>
          <value>QuantLib::Sat</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Sun</string>
          <value>QuantLib::Sun</value>
        </EnumeratedType>
      </EnumeratedTypes>
    </EnumeratedTypeGroup>

    <EnumeratedTypeGroup type='QuantLib::Currency'>
      <includeFile>oh/enumerations/typefactory.hpp</includeFile>
      <constructor>false</constructor>
      <EnumeratedTypes>

        <EnumeratedType>
          <string>Currency</string>
          <value>QuantLib::Currency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>NoCurrency</string>
          <value>QuantLib::Currency()</value>
        </EnumeratedType>

        <EnumeratedType>
          <string>ARS</string>
          <value>QuantLib::ARSCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>ATS</string>
          <value>QuantLib::ATSCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>AUD</string>
          <value>QuantLib::AUDCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>BDT</string>
          <value>QuantLib::BDTCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>BEF</string>
          <value>QuantLib::BEFCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>BGL</string>
          <value>QuantLib::BGLCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>BRL</string>
          <value>QuantLib::BRLCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>BYR</string>
          <value>QuantLib::BYRCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>CAD</string>
          <value>QuantLib::CADCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>CHF</string>
          <value>QuantLib::CHFCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>CLP</string>
          <value>QuantLib::CLPCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>CNY</string>
          <value>QuantLib::CNYCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>COP</string>
          <value>QuantLib::COPCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>CYP</string>
          <value>QuantLib::CYPCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>CZK</string>
          <value>QuantLib::CZKCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>DEM</string>
          <value>QuantLib::DEMCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>DKK</string>
          <value>QuantLib::DKKCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>EEK</string>
          <value>QuantLib::EEKCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>ESP</string>
          <value>QuantLib::ESPCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>EUR</string>
          <value>QuantLib::EURCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>FIM</string>
          <value>QuantLib::FIMCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>FRF</string>
          <value>QuantLib::FRFCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>GBP</string>
          <value>QuantLib::GBPCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>GRD</string>
          <value>QuantLib::GRDCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>HKD</string>
          <value>QuantLib::HKDCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>HUF</string>
          <value>QuantLib::HUFCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>IDR</string>
          <value>QuantLib::IDRCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>IEP</string>
          <value>QuantLib::IEPCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>ILS</string>
          <value>QuantLib::ILSCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>INR</string>
          <value>QuantLib::INRCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>IQD</string>
          <value>QuantLib::IQDCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>IRR</string>
          <value>QuantLib::IRRCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>ISK</string>
          <value>QuantLib::ISKCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>ITL</string>
          <value>QuantLib::ITLCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>JPY</string>
          <value>QuantLib::JPYCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>KRW</string>
          <value>QuantLib::KRWCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>KWD</string>
          <value>QuantLib::KWDCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>LTL</string>
          <value>QuantLib::LTLCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>LUF</string>
          <value>QuantLib::LUFCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>LVL</string>
          <value>QuantLib::LVLCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>MTL</string>
          <value>QuantLib::MTLCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>MXN</string>
          <value>QuantLib::MXNCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>MYR</string>
          <value>QuantLib::MYRCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>NLG</string>
          <value>QuantLib::NLGCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>NOK</string>
          <value>QuantLib::NOKCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>NPR</string>
          <value>QuantLib::NPRCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>NZD</string>
          <value>QuantLib::NZDCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>PEH</string>
          <value>QuantLib::PEHCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>PEI</string>
          <value>QuantLib::PEICurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>PEN</string>
          <value>QuantLib::PENCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>PKR</string>
          <value>QuantLib::PKRCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>PLN</string>
          <value>QuantLib::PLNCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>PTE</string>
          <value>QuantLib::PTECurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>ROL</string>
          <value>QuantLib::ROLCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>RON</string>
          <value>QuantLib::RONCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>RUB</string>
          <value>QuantLib::RUBCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>SAR</string>
          <value>QuantLib::SARCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>SEK</string>
          <value>QuantLib::SEKCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>SGD</string>
          <value>QuantLib::SGDCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>SIT</string>
          <value>QuantLib::SITCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>SKK</string>
          <value>QuantLib::SKKCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>THB</string>
          <value>QuantLib::THBCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>TRL</string>
          <value>QuantLib::TRLCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>TRY</string>
          <value>QuantLib::TRYCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>TTD</string>
          <value>QuantLib::TTDCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>TWD</string>
          <value>QuantLib::TWDCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>USD</string>
          <value>QuantLib::USDCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>VEB</string>
          <value>QuantLib::VEBCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>VND</string>
          <value>QuantLib::VNDCurrency()</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>ZAR</string>
          <value>QuantLib::ZARCurrency()</value>
        </EnumeratedType>
      </EnumeratedTypes>
    </EnumeratedTypeGroup>

    <EnumeratedTypeGroup type='QuantLib::Compounding'>
      <includeFile>oh/enumerations/typefactory.hpp</includeFile>
      <constructor>true</constructor>
      <EnumeratedTypes>
        <EnumeratedType>
          <string>Continuous</string>
          <value>QuantLib::Continuous</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Simple</string>
          <value>QuantLib::Simple</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Compounded</string>
          <value>QuantLib::Compounded</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>SimpleThenCompounded</string>
          <value>QuantLib::SimpleThenCompounded</value>
        </EnumeratedType>
      </EnumeratedTypes>
    </EnumeratedTypeGroup>

    <EnumeratedTypeGroup type='QuantLib::Duration::Type'>
      <includeFile>oh/enumerations/typefactory.hpp</includeFile>
      <constructor>true</constructor>
      <EnumeratedTypes>
        <EnumeratedType>
          <string>Simple</string>
          <value>QuantLib::Duration::Simple</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Macaulay</string>
          <value>QuantLib::Duration::Macaulay</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Modified</string>
          <value>QuantLib::Duration::Modified</value>
        </EnumeratedType>
      </EnumeratedTypes>
    </EnumeratedTypeGroup>

    <EnumeratedTypeGroup type='QuantLib::PriceType'>
      <includeFile>oh/enumerations/typefactory.hpp</includeFile>
      <constructor>true</constructor>
      <EnumeratedTypes>
        <EnumeratedType>
          <string>Bid</string>
          <value>QuantLib::Bid</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Ask</string>
          <value>QuantLib::Ask</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Last</string>
          <value>QuantLib::Last</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Close</string>
          <value>QuantLib::Close</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Mid</string>
          <value>QuantLib::Mid</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Mid Equivalent</string>
          <value>QuantLib::MidEquivalent</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Mid Safe</string>
          <value>QuantLib::MidSafe</value>
        </EnumeratedType>
      </EnumeratedTypes>
    </EnumeratedTypeGroup>

    <EnumeratedTypeGroup type='QuantLib::Position::Type'>
      <includeFile>oh/enumerations/typefactory.hpp</includeFile>
      <constructor>true</constructor>
      <EnumeratedTypes>
        <EnumeratedType>
          <string>Long</string>
          <value>QuantLib::Position::Long</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Short</string>
          <value>QuantLib::Position::Short</value>
        </EnumeratedType>
      </EnumeratedTypes>
    </EnumeratedTypeGroup>

    <EnumeratedTypeGroup type='QuantLib::Replication::Type'>
      <includeFile>oh/enumerations/typefactory.hpp</includeFile>
      <constructor>true</constructor>
      <EnumeratedTypes>
        <EnumeratedType>
          <string>Central</string>
          <value>QuantLib::Replication::Central</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Sub</string>
          <value>QuantLib::Replication::Sub</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Super</string>
          <value>QuantLib::Replication::Super</value>
        </EnumeratedType>
      </EnumeratedTypes>
    </EnumeratedTypeGroup>

    <EnumeratedTypeGroup type='QuantLib::Average::Type'>
      <includeFile>oh/enumerations/typefactory.hpp</includeFile>
      <constructor>true</constructor>
      <EnumeratedTypes>
        <EnumeratedType>
          <string>Arithmetic</string>
          <value>QuantLib::Average::Arithmetic</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Geometric</string>
          <value>QuantLib::Average::Geometric</value>
        </EnumeratedType>
      </EnumeratedTypes>
    </EnumeratedTypeGroup>

    <EnumeratedTypeGroup type='QuantLib::Barrier::Type'>
      <includeFile>oh/enumerations/typefactory.hpp</includeFile>
      <constructor>true</constructor>
      <EnumeratedTypes>
        <EnumeratedType>
          <string>DownIn</string>
          <value>QuantLib::Barrier::DownIn</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>DownOut</string>
          <value>QuantLib::Barrier::DownOut</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>UpIn</string>
          <value>QuantLib::Barrier::UpIn</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>UpOut</string>
          <value>QuantLib::Barrier::UpOut</value>
        </EnumeratedType>
      </EnumeratedTypes>
    </EnumeratedTypeGroup>

    <EnumeratedTypeGroup type='QuantLib::VanillaSwap::Type'>
      <includeFile>oh/enumerations/typefactory.hpp</includeFile>
      <constructor>true</constructor>
      <EnumeratedTypes>
        <EnumeratedType>
          <string>Payer</string>
          <value>QuantLib::VanillaSwap::Payer</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Receiver</string>
          <value>QuantLib::VanillaSwap::Receiver</value>
        </EnumeratedType>
      </EnumeratedTypes>
    </EnumeratedTypeGroup>

    <EnumeratedTypeGroup type='QuantLib::Futures::Type'>
      <includeFile>oh/enumerations/typefactory.hpp</includeFile>
      <constructor>true</constructor>
      <EnumeratedTypes>
        <EnumeratedType>
          <string>IMM</string>
          <value>QuantLib::Futures::IMM</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>ASX</string>
          <value>QuantLib::Futures::ASX</value>
        </EnumeratedType>
      </EnumeratedTypes>
    </EnumeratedTypeGroup>

    <EnumeratedTypeGroup type='QuantLib::Pillar::Choice'>
      <includeFile>oh/enumerations/typefactory.hpp</includeFile>
      <constructor>true</constructor>
      <EnumeratedTypes>
        <EnumeratedType>
          <string>LastRelevantDate</string>
          <value>QuantLib::Pillar::LastRelevantDate</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>MaturityDate</string>
          <value>QuantLib::Pillar::MaturityDate</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>CustomDate</string>
          <value>QuantLib::Pillar::CustomDate</value>
        </EnumeratedType>
      </EnumeratedTypes>
    </EnumeratedTypeGroup>

    <!--RL ADD 2010-07-15-->
    <EnumeratedTypeGroup type='QuantLib::Protection::Side'>
      <includeFile>oh/enumerations/typefactory.hpp</includeFile>
      <constructor>true</constructor>
      <EnumeratedTypes>
        <EnumeratedType>
          <string>Buyer</string>
          <value>QuantLib::Protection::Buyer</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Seller</string>
          <value>QuantLib::Protection::Seller</value>
        </EnumeratedType>
      </EnumeratedTypes>
    </EnumeratedTypeGroup>

    <EnumeratedTypeGroup type='QuantLib::OvernightIndexedSwap::Type'>
      <includeFile>oh/enumerations/typefactory.hpp</includeFile>
      <constructor>true</constructor>
      <EnumeratedTypes>
        <EnumeratedType>
          <string>Payer</string>
          <value>QuantLib::OvernightIndexedSwap::Payer</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Receiver</string>
          <value>QuantLib::OvernightIndexedSwap::Receiver</value>
        </EnumeratedType>
      </EnumeratedTypes>
    </EnumeratedTypeGroup>

    <EnumeratedTypeGroup type='QuantLib::Option::Type'>
      <includeFile>oh/enumerations/typefactory.hpp</includeFile>
      <constructor>true</constructor>
      <EnumeratedTypes>
        <EnumeratedType>
          <string>Call</string>
          <value>QuantLib::Option::Call</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Put</string>
          <value>QuantLib::Option::Put</value>
        </EnumeratedType>
      </EnumeratedTypes>
    </EnumeratedTypeGroup>

    <EnumeratedTypeGroup type='QuantLib::CapFloor::Type'>
      <includeFile>oh/enumerations/typefactory.hpp</includeFile>
      <constructor>true</constructor>
      <EnumeratedTypes>
        <EnumeratedType>
          <string>Cap</string>
          <value>QuantLib::CapFloor::Cap</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Floor</string>
          <value>QuantLib::CapFloor::Floor</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Collar</string>
          <value>QuantLib::CapFloor::Collar</value>
        </EnumeratedType>
      </EnumeratedTypes>
    </EnumeratedTypeGroup>

    <EnumeratedTypeGroup type='QuantLib::Settlement::Type'>
      <includeFile>oh/enumerations/typefactory.hpp</includeFile>
      <constructor>true</constructor>
      <EnumeratedTypes>
        <EnumeratedType>
          <string>Physical</string>
          <value>QuantLib::Settlement::Physical</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Cash</string>
          <value>QuantLib::Settlement::Cash</value>
        </EnumeratedType>
      </EnumeratedTypes>
    </EnumeratedTypeGroup>

    <EnumeratedTypeGroup type='QuantLib::GFunctionFactory::YieldCurveModel'>
      <includeFile>oh/enumerations/typefactory.hpp</includeFile>
      <constructor>true</constructor>
      <EnumeratedTypes>
        <EnumeratedType>
          <string>NonParallelShifts</string>
          <value>QuantLib::GFunctionFactory::NonParallelShifts</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Standard</string>
          <value>QuantLib::GFunctionFactory::Standard</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>ExactYield</string>
          <value>QuantLib::GFunctionFactory::ExactYield</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>ParallelShifts</string>
          <value>QuantLib::GFunctionFactory::ParallelShifts</value>
        </EnumeratedType>
      </EnumeratedTypes>
    </EnumeratedTypeGroup>

    <EnumeratedTypeGroup type='QuantLib::CmsMarketCalibration::CalibrationType'>
      <includeFile>oh/enumerations/typefactory.hpp</includeFile>
      <constructor>true</constructor>
      <EnumeratedTypes>
        <EnumeratedType>
          <string>OnSpread</string>
          <value>QuantLib::CmsMarketCalibration::OnSpread</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>OnPrice</string>
          <value>QuantLib::CmsMarketCalibration::OnPrice</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>OnForwardPrice</string>
          <value>QuantLib::CmsMarketCalibration::OnForwardCmsPrice</value>
        </EnumeratedType>
      </EnumeratedTypes>
    </EnumeratedTypeGroup>

    <EnumeratedTypeGroup type='QuantLibAddin::RateHelper::DepoInclusionCriteria'>
      <includeFile>oh/enumerations/typefactory.hpp</includeFile>
      <constructor>true</constructor>
      <EnumeratedTypes>
        <EnumeratedType>
          <string>AllDepos</string>
          <value>QuantLibAddin::RateHelper::AllDepos</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>DeposBeforeFirstFuturesStartDate</string>
          <value>QuantLibAddin::RateHelper::DeposBeforeFirstFuturesStartDate</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>DeposBeforeFirstFuturesStartDatePlusOne</string>
          <value>QuantLibAddin::RateHelper::DeposBeforeFirstFuturesStartDatePlusOne</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>DeposBeforeFirstFuturesExpiryDate</string>
          <value>QuantLibAddin::RateHelper::DeposBeforeFirstFuturesExpiryDate</value>
        </EnumeratedType>
      </EnumeratedTypes>
    </EnumeratedTypeGroup>

    <EnumeratedTypeGroup type='QuantLibAddin::SwapIndex::FixingType'>
      <includeFile>oh/enumerations/typefactory.hpp</includeFile>
      <constructor>true</constructor>
      <EnumeratedTypes>
        <EnumeratedType>
          <string>Isda</string>
          <value>QuantLibAddin::SwapIndex::Isda</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>IsdaFixA</string>
          <value>QuantLibAddin::SwapIndex::IsdaFixA</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>IsdaFixB</string>
          <value>QuantLibAddin::SwapIndex::IsdaFixB</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>IfrFix</string>
          <value>QuantLibAddin::SwapIndex::IfrFix</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>IsdaFixAm</string>
          <value>QuantLibAddin::SwapIndex::IsdaFixAm</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>IsdaFixPm</string>
          <value>QuantLibAddin::SwapIndex::IsdaFixPm</value>
        </EnumeratedType>
      </EnumeratedTypes>
    </EnumeratedTypeGroup>

    <EnumeratedTypeGroup type='QuantLibAddin::InterpolatedYieldCurve::Traits'>
      <includeFile>qlo/yieldtermstructures.hpp</includeFile>
      <constructor>true</constructor>
      <EnumeratedTypes>
        <EnumeratedType>
          <string>Discount</string>
          <value>QuantLibAddin::InterpolatedYieldCurve::Discount</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>ForwardRate</string>
          <value>QuantLibAddin::InterpolatedYieldCurve::ForwardRate</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>ZeroYield</string>
          <value>QuantLibAddin::InterpolatedYieldCurve::ZeroYield</value>
        </EnumeratedType>
      </EnumeratedTypes>
    </EnumeratedTypeGroup>

    <EnumeratedTypeGroup type='QuantLibAddin::InterpolatedYieldCurve::Interpolator'>
      <includeFile>qlo/yieldtermstructures.hpp</includeFile>
      <constructor>true</constructor>
      <EnumeratedTypes>
        <EnumeratedType>
          <string>BackwardFlat</string>
          <value>QuantLibAddin::InterpolatedYieldCurve::BackwardFlat</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>ForwardFlat</string>
          <value>QuantLibAddin::InterpolatedYieldCurve::ForwardFlat</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Linear</string>
          <value>QuantLibAddin::InterpolatedYieldCurve::Linear</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>LogLinear</string>
          <value>QuantLibAddin::InterpolatedYieldCurve::LogLinear</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>CubicNaturalSpline</string>
          <value>QuantLibAddin::InterpolatedYieldCurve::CubicNaturalSpline</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>LogCubicNaturalSpline</string>
          <value>QuantLibAddin::InterpolatedYieldCurve::LogCubicNaturalSpline</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>MonotonicCubicNaturalSpline</string>
          <value>QuantLibAddin::InterpolatedYieldCurve::MonotonicCubicNaturalSpline</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>MonotonicLogCubicNaturalSpline</string>
          <value>QuantLibAddin::InterpolatedYieldCurve::MonotonicLogCubicNaturalSpline</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>KrugerCubic</string>
          <value>QuantLibAddin::InterpolatedYieldCurve::KrugerCubic</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>KrugerLogCubic</string>
          <value>QuantLibAddin::InterpolatedYieldCurve::KrugerLogCubic</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>FritschButlandCubic</string>
          <value>QuantLibAddin::InterpolatedYieldCurve::FritschButlandCubic</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>FritschButlandLogCubic</string>
          <value>QuantLibAddin::InterpolatedYieldCurve::FritschButlandLogCubic</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Parabolic</string>
          <value>QuantLibAddin::InterpolatedYieldCurve::Parabolic</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>LogParabolic</string>
          <value>QuantLibAddin::InterpolatedYieldCurve::LogParabolic</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>MonotonicParabolic</string>
          <value>QuantLibAddin::InterpolatedYieldCurve::MonotonicParabolic</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>MonotonicLogParabolic</string>
          <value>QuantLibAddin::InterpolatedYieldCurve::MonotonicLogParabolic</value>
        </EnumeratedType>
      </EnumeratedTypes>
    </EnumeratedTypeGroup>

    <EnumeratedTypeGroup type='QuantLib::EndCriteria::Type'>
      <includeFile>oh/enumerations/typefactory.hpp</includeFile>
      <constructor>true</constructor>
      <EnumeratedTypes>
        <EnumeratedType>
          <string>StationaryPoint</string>
          <value>QuantLib::EndCriteria::StationaryPoint</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>None</string>
          <value>QuantLib::EndCriteria::None</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>MaxIterations</string>
          <value>QuantLib::EndCriteria::MaxIterations</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>StationaryFunctionValue</string>
          <value>QuantLib::EndCriteria::StationaryFunctionValue</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>StationaryFunctionAccuracy</string>
          <value>QuantLib::EndCriteria::StationaryFunctionAccuracy</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>ZeroGradientNorm</string>
          <value>QuantLib::EndCriteria::ZeroGradientNorm</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Unknown</string>
          <value>QuantLib::EndCriteria::Unknown</value>
        </EnumeratedType>
      </EnumeratedTypes>
    </EnumeratedTypeGroup>

    <EnumeratedTypeGroup type='QuantLib::SalvagingAlgorithm::Type'>
      <includeFile>oh/enumerations/typefactory.hpp</includeFile>
      <constructor>true</constructor>
      <EnumeratedTypes>
        <EnumeratedType>
          <string>Spectral</string>
          <value>QuantLib::SalvagingAlgorithm::Spectral</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>None</string>
          <value>QuantLib::SalvagingAlgorithm::None</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Hypersphere</string>
          <value>QuantLib::SalvagingAlgorithm::Hypersphere</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>LowerDiagonal</string>
          <value>QuantLib::SalvagingAlgorithm::LowerDiagonal</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Higham</string>
          <value>QuantLib::SalvagingAlgorithm::Higham</value>
        </EnumeratedType>
      </EnumeratedTypes>
    </EnumeratedTypeGroup>

    <EnumeratedTypeGroup type='QuantLib::CubicInterpolation::BoundaryCondition'>
      <includeFile>oh/enumerations/typefactory.hpp</includeFile>
      <constructor>false</constructor>
      <EnumeratedTypes>
        <EnumeratedType>
          <string>SecondDerivative</string>
          <value>QuantLib::CubicInterpolation::BoundaryCondition(QuantLib::CubicInterpolation::SecondDerivative)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>NotAKnot</string>
          <value>QuantLib::CubicInterpolation::BoundaryCondition(QuantLib::CubicInterpolation::NotAKnot)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>FirstDerivative</string>
          <value>QuantLib::CubicInterpolation::BoundaryCondition(QuantLib::CubicInterpolation::FirstDerivative)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Periodic</string>
          <value>QuantLib::CubicInterpolation::BoundaryCondition(QuantLib::CubicInterpolation::Periodic)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Lagrange</string>
          <value>QuantLib::CubicInterpolation::BoundaryCondition(QuantLib::CubicInterpolation::Lagrange)</value>
        </EnumeratedType>
      </EnumeratedTypes>
    </EnumeratedTypeGroup>

    <EnumeratedTypeGroup type='QuantLib::CubicInterpolation::DerivativeApprox'>
      <includeFile>oh/enumerations/typefactory.hpp</includeFile>
      <constructor>false</constructor>
      <EnumeratedTypes>
        <EnumeratedType>
          <string>Spline</string>
          <value>QuantLib::CubicInterpolation::DerivativeApprox(QuantLib::CubicInterpolation::Spline)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>FourthOrder</string>
          <value>QuantLib::CubicInterpolation::DerivativeApprox(QuantLib::CubicInterpolation::FourthOrder)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Parabolic</string>
          <value>QuantLib::CubicInterpolation::DerivativeApprox(QuantLib::CubicInterpolation::Parabolic)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>FritschButland</string>
          <value>QuantLib::CubicInterpolation::DerivativeApprox(QuantLib::CubicInterpolation::FritschButland)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Akima</string>
          <value>QuantLib::CubicInterpolation::DerivativeApprox(QuantLib::CubicInterpolation::Akima)</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>Kruger</string>
          <value>QuantLib::CubicInterpolation::DerivativeApprox(QuantLib::CubicInterpolation::Kruger)</value>
        </EnumeratedType>
      </EnumeratedTypes>
    </EnumeratedTypeGroup>

    <EnumeratedTypeGroup type='QuantLib::Seniority'>
      <includeFile>oh/enumerations/typefactory.hpp</includeFile>
      <constructor>true</constructor>
      <EnumeratedTypes>
        <EnumeratedType>
          <string>SeniorSec</string>
          <value>QuantLib::SeniorSec</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>SeniorUnSec</string>
          <value>QuantLib::SeniorUnSec</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>SubTier1</string>
          <value>QuantLib::SubTier1</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>SubUpperTier2</string>
          <value>QuantLib::SubUpperTier2</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>SubLoweTier2</string>
          <value>QuantLib::SubLoweTier2</value>
        </EnumeratedType>
        <EnumeratedType>
          <string>NoSeniority</string>
          <value>QuantLib::NoSeniority</value>
        </EnumeratedType>
      </EnumeratedTypes>
    </EnumeratedTypeGroup>

  </EnumeratedTypeGroups>

</root>
